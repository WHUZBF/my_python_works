本程序为命令行式交互
注意用'+'代替一个空格
本计算程序支持分数比如-4/7 表示负的七分之四
注意计算结果不会替换原来的矩阵,比如value B之后,B不是数值矩阵,没有改变,这时需要使用save_as转存为另一个矩阵,如save_as b

第一篇：
使用'define+矩阵名称' 来定义一个矩阵，矩阵名称自定义，可以定义多个矩阵
使用'exit'退出程序
使用'view_all'查看所有矩阵
使用'view+矩阵名'查看矩阵数据
使用'revise+矩阵名'修改矩阵数据，输入格式为'数据集1；数据集2；……’每个数据集包含三个数据'要修改的数据行位置，列位置，新数据'
使用'load+矩阵名'定义一个矩阵，并且使用excel中的数据，注意导入时要将数据文件放在与exe文件同一目录下，在输入数据时输入格式为  '左上角行,列,右下角行,列'
使用'format+num'设置数值矩阵精度(或者特征向量输出精度)
使用'doc+cmd'查看某一个命令的具体使用方法
使用'doc'来查看所有支持的命令


第二篇：
先使用命令'calculate_mode'进入计算模式
单目运算：
1.'trac+A'计算矩阵A的迹
2.'inv+A' 计算矩阵的逆矩阵
3.'adj+A'计算矩阵的伴随矩阵
4.'det+A'计算矩阵的行列式
5.'simplify+A'计算矩阵的行简化阶梯型
    (ps.使用的算法为不稳定算法会导致行互换位置,与主流计算软件结果表现不同但互相等价)
6.'simplest+A'计算矩阵的行最简型
7.'save_as + A'保存上次计算的结果为矩阵A
8.'LU+A'将A进行LU分解(注意采用的是部分高斯消元法，不是最优算法)
9.'schmidt+A'将A向量组正交化
10.'eig+A'求出A的特征值和特征向量，使用的是numpy接口，仅支持小数输出
     (ps.使用'j'表示虚数，当虚部很小时，numpy计算输出时会只保留实部）
11.'unit+A'将A矩阵单位化，注意，无法进一步进行根式计算，只能显示单位化结果
12.'transpose+A'将矩阵A转置
13.'rank+A'输出矩阵的秩
14.'value+A'将矩阵转换为数值矩阵  一定要配合save_as使用!!!
15.***对数值矩阵进行常规计算会报错(包括view)***，但是你能使用'view_f+A'来查看数值矩阵所有的相关特性

双目运算：
1.'A @ B' 计算A,B矩阵乘积
2.'A - B' 计算A-B
3.'A + B' 计算A+B
4.'A ^ num' 计算A的num次方  ps:在次数很高时，由于内部计算机制会导致不稳定问题，一般次数下不受影响
5.'A , B' 横着合并矩阵
6.'A ; B' 竖着合并矩阵
7.'A f^ num' 对于数值矩阵A的专属计算，计算A的n次幂
8.'A * B' 矩阵对应元素相乘
9.'A / B' 矩阵对应元素相除
10.'A .+ num' 矩阵所有元素加上一个数
11.'A .- num' 矩阵所有元素减去一个数
12.'A .^ num' 矩阵所有元素进行n次幂操作
13.'A .* num' 矩阵所有元素乘以一个数

第三篇:
草稿运算模式
1.'draft_mode'进入草稿运算模式
下面进行初等变换
列变换模式就输入'c',行变换输入'r'
2.'mul+行(列)+倍数+模式' 某一行(列)乘以一个非零常数
3.'times+行(列)+行(列)+倍数+模式' 后面的行(列)乘以一个非零常数加到前面去
4.'exchange+行(列)+行(列)+模式' 交换两行(列)
5.'view_op'查看所有进行过的操作

第四篇:
布尔运算模式(方便进行离散数学中的布尔矩阵分析)
1.'bool_mode' 进入布尔运算模式
2.'bool+A' 定义一个bool矩阵
3.'not A'(! A) 对A按位取反
4.'A and B'(A & B) A,B的并
5.'A or B'(A | B) A,B的或
6.'A xor B'(A ^ B) A,B按位取异或
7.'A # B' A,B的布尔乘积
8.'A #^ num' A的布尔幂